{% extends 'base.html.twig' %}

{% block title %}Finaliser ma commande - Glowly{% endblock %}

{% block body %}

{% include 'components/header.html.twig' with {'user': app.user} %}

<section class="py-16 bg-gradient-to-br from-emerald-50 via-teal-50 to-cyan-50 min-h-screen">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- En-tête -->
        <div class="text-center mb-12 animate-fade-in">
            <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-teal-500 to-emerald-600 rounded-full mb-6">
                <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                </svg>
            </div>
            <h1 class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-gray-900 via-teal-900 to-emerald-900 bg-clip-text text-transparent mb-4">
                Finaliser ma commande
            </h1>
            <p class="text-lg text-gray-600">
                Vérifiez votre commande et procédez au paiement sécurisé
            </p>
        </div>

        <!-- Étapes de commande -->
        <div class="mb-12">
            <div class="flex items-center justify-center space-x-8">
                <div class="flex items-center">
                    <div class="w-10 h-10 bg-teal-600 rounded-full flex items-center justify-center text-white font-bold">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <span class="ml-3 text-teal-600 font-medium">Panier</span>
                </div>
                <div class="w-16 h-1 bg-teal-200"></div>
                <div class="flex items-center">
                    <div class="w-10 h-10 bg-teal-600 rounded-full flex items-center justify-center text-white font-bold">2</div>
                    <span class="ml-3 text-teal-600 font-medium">Commande</span>
                </div>
                <div class="w-16 h-1 bg-gray-200"></div>
                <div class="flex items-center">
                    <div class="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center text-gray-500 font-bold">3</div>
                    <span class="ml-3 text-gray-500 font-medium">Paiement</span>
                </div>
            </div>
        </div>

        <!-- Contenu principal -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Récapitulatif de commande -->
            <div class="bg-white/70 backdrop-blur-lg rounded-3xl shadow-xl border border-white/20 p-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                    <svg class="w-6 h-6 mr-3 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                    </svg>
                    Récapitulatif
                </h2>

                <div class="space-y-4 mb-6">
                    {% for item in cartItems %}
                        <div class="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl">
                            <div class="w-16 h-16 bg-gradient-to-br from-teal-200 to-emerald-300 rounded-lg overflow-hidden flex-shrink-0">
                                {% if item.product.images and item.product.images|length > 0 %}
                                    <img src="{{ item.product.images[0] }}" alt="{{ item.product.name }}" 
                                         class="w-full h-full object-cover">
                                {% else %}
                                    <div class="w-full h-full flex items-center justify-center">
                                        <svg class="w-6 h-6 text-white opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                                        </svg>
                                    </div>
                                {% endif %}
                            </div>
                            <div class="flex-grow">
                                <h4 class="font-semibold text-gray-900">{{ item.product.name }}</h4>
                                <p class="text-sm text-gray-600">{{ item.product.category.name }}</p>
                                <p class="text-xs text-gray-500">Quantité: {{ item.quantity }}</p>
                            </div>
                            <div class="text-right">
                                <div class="font-bold text-teal-600">{{ item.totalPrice }}€</div>
                                <div class="text-xs text-gray-500">{{ item.product.price }}€ / unité</div>
                            </div>
                        </div>
                    {% endfor %}
                </div>

                <!-- Totaux -->
                <div class="border-t border-gray-200 pt-4 space-y-2">
                    <div class="flex justify-between items-center">
                        <span class="text-gray-600">Sous-total</span>
                        <span class="font-medium">{{ total }}€</span>
                    </div>
                    <div class="flex justify-between items-center">
                        <span class="text-gray-600">Livraison</span>
                        <span class="font-medium">
                            {% if total >= 50 %}
                                <span class="text-green-600">Gratuite</span>
                            {% else %}
                                <span>4.90€</span>
                            {% endif %}
                        </span>
                    </div>
                    {% if total < 50 %}
                        <div class="text-xs text-gray-500 bg-blue-50 p-3 rounded-lg">
                            <svg class="w-4 h-4 inline mr-1 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            Plus que {{ (50 - total)|number_format(2, '.', '') }}€ pour la livraison gratuite
                        </div>
                    {% endif %}
                </div>
                
                <div class="border-t border-gray-200 pt-4 mt-4">
                    <div class="flex justify-between items-center">
                        <span class="text-xl font-bold text-gray-900">Total</span>
                        <span class="text-2xl font-bold text-teal-600">
                            {{ total < 50 ? (total + 4.90)|number_format(2, '.', '') : total }}€
                        </span>
                    </div>
                </div>

                <!-- Bouton retour au panier -->
                <div class="mt-6">
                    <a href="{{ path('client_cart') }}" 
                       class="w-full bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-6 rounded-xl transition-colors text-center block">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18"></path>
                        </svg>
                        Retour au panier
                    </a>
                </div>
            </div>

            <!-- Informations de livraison et paiement -->
            <div class="space-y-8">
                <!-- Informations de livraison -->
                <div class="bg-white/70 backdrop-blur-lg rounded-3xl shadow-xl border border-white/20 p-8">
                    <h2 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                        <svg class="w-6 h-6 mr-3 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        Livraison
                    </h2>

                    <form id="addressForm" class="space-y-4">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Prénom</label>
                                <input type="text" name="firstName" value="{{ app.user.firstName }}" required
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Nom</label>
                                <input type="text" name="lastName" value="{{ app.user.lastName }}" required
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500">
                            </div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Adresse</label>
                            <input type="text" name="address" required
                                   class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500"
                                   placeholder="123 rue de la République">
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Code postal</label>
                                <input type="text" name="postalCode" required
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500"
                                       placeholder="75001">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Ville</label>
                                <input type="text" name="city" required
                                       class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500"
                                       placeholder="Paris">
                            </div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Téléphone</label>
                            <input type="tel" name="phone" value="{{ app.user.phone ?? '' }}"
                                   class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-teal-500"
                                   placeholder="06 12 34 56 78">
                        </div>
                    </form>
                </div>

                <!-- Paiement -->
                <div class="bg-white/70 backdrop-blur-lg rounded-3xl shadow-xl border border-white/20 p-8">
                    <h2 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                        <svg class="w-6 h-6 mr-3 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                        </svg>
                        Paiement sécurisé
                    </h2>

                    <div class="mb-6">
                        <div class="flex items-center space-x-4 p-4 bg-green-50 border border-green-200 rounded-xl">
                            <svg class="w-6 h-6 text-green-600 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                            </svg>
                            <div>
                                <p class="font-medium text-green-800">Paiement sécurisé par Stripe</p>
                                <p class="text-sm text-green-600">Vos données bancaires sont protégées et ne sont pas stockées sur nos serveurs</p>
                            </div>
                        </div>
                    </div>

                    <!-- Méthodes de paiement acceptées -->
                    <div class="mb-6">
                        <p class="text-sm font-medium text-gray-700 mb-3">Moyens de paiement acceptés :</p>
                        <div class="flex items-center space-x-3">
                            <div class="bg-white p-2 rounded border">
                                <svg class="w-8 h-5" viewBox="0 0 32 20" fill="none">
                                    <rect width="32" height="20" rx="4" fill="#1434CB"/>
                                    <path d="M13.3 14.8H11.2L12.4 5.2H14.5L13.3 14.8Z" fill="white"/>
                                    <path d="M20.8 5.4C20.4 5.3 19.8 5.1 18.9 5.1C16.9 5.1 15.5 6.2 15.5 7.7C15.5 8.8 16.5 9.4 17.2 9.8C18 10.2 18.3 10.5 18.3 10.9C18.3 11.5 17.6 11.8 16.9 11.8C16 11.8 15.5 11.6 14.9 11.4L14.6 11.3L14.3 13.1C14.8 13.3 15.7 13.5 16.7 13.5C18.9 13.5 20.3 12.4 20.3 10.8C20.3 10 19.8 9.4 18.7 8.9C18.1 8.6 17.7 8.3 17.7 7.9C17.7 7.5 18.2 7.1 19.1 7.1C19.8 7.1 20.3 7.2 20.7 7.4L20.9 7.5L21.2 5.8C20.9 5.6 20.9 5.4 20.8 5.4Z" fill="white"/>
                                </svg>
                            </div>
                            <div class="bg-white p-2 rounded border">
                                <svg class="w-8 h-5" viewBox="0 0 32 20">
                                    <rect width="32" height="20" rx="4" fill="#EB001B"/>
                                    <rect x="12" y="4" width="8" height="12" fill="#FF5F00"/>
                                    <circle cx="12" cy="10" r="6" fill="#EB001B"/>
                                    <circle cx="20" cy="10" r="6" fill="#F79E1B"/>
                                </svg>
                            </div>
                            <div class="bg-white p-2 rounded border">
                                <svg class="w-8 h-5" viewBox="0 0 32 20">
                                    <rect width="32" height="20" rx="4" fill="#0070BA"/>
                                    <path d="M8.5 6.5H10.8V13.5H8.5V6.5Z" fill="white"/>
                                    <path d="M11.2 6.5H13.5C14.9 6.5 15.8 7.4 15.8 9C15.8 10.6 14.9 11.5 13.5 11.5H12.4V13.5H11.2V6.5ZM12.4 7.7V10.3H13.3C14 10.3 14.4 9.9 14.4 9C14.4 8.1 14 7.7 13.3 7.7H12.4Z" fill="white"/>
                                </svg>
                            </div>
                        </div>
                    </div>

                    <!-- Bouton de paiement -->
                    <button id="paymentBtn" onclick="proceedToPayment()" 
                            class="w-full bg-gradient-to-r from-teal-600 to-emerald-600 hover:from-teal-700 hover:to-emerald-700 text-white font-semibold py-4 px-6 rounded-2xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg">
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                        Payer maintenant - {{ total < 50 ? (total + 4.90)|number_format(2, '.', '') : total }}€
                    </button>

                    <!-- Conditions -->
                    <div class="mt-6 text-xs text-gray-500 text-center">
                        En finalisant votre commande, vous acceptez nos 
                        <a href="#" class="text-teal-600 hover:underline">conditions générales de vente</a> 
                        et notre 
                        <a href="#" class="text-teal-600 hover:underline">politique de confidentialité</a>.
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<script>
function proceedToPayment() {
    const form = document.getElementById('addressForm');
    const formData = new FormData(form);
    
    // Vérifier que tous les champs requis sont remplis
    const requiredFields = ['firstName', 'lastName', 'address', 'postalCode', 'city'];
    let isValid = true;
    
    requiredFields.forEach(field => {
        const value = formData.get(field);
        if (!value || value.trim() === '') {
            isValid = false;
            const input = form.querySelector(`[name="${field}"]`);
            input.classList.add('border-red-500');
            setTimeout(() => input.classList.remove('border-red-500'), 3000);
        }
    });
    
    if (!isValid) {
        showNotification('Veuillez remplir tous les champs obligatoires', 'error');
        return;
    }
    
    const paymentBtn = document.getElementById('paymentBtn');
    const originalContent = paymentBtn.innerHTML;
    
    // Animation de chargement
    paymentBtn.disabled = true;
    paymentBtn.innerHTML = `
        <svg class="animate-spin w-5 h-5 inline mr-2" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Redirection vers le paiement...
    `;
    
    // Créer la session de paiement Stripe
    fetch('/client/payment/create-session', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify({
            address: {
                firstName: formData.get('firstName'),
                lastName: formData.get('lastName'),
                address: formData.get('address'),
                postalCode: formData.get('postalCode'),
                city: formData.get('city'),
                phone: formData.get('phone')
            }
        })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        if (data.checkout_url) {
            // Rediriger vers Stripe Checkout
            window.location.href = data.checkout_url;
        } else {
            // Erreur
            paymentBtn.innerHTML = originalContent;
            paymentBtn.disabled = false;
            
            // Afficher un message d'erreur détaillé
            let errorMessage = data.error || 'Erreur lors de la création de la session de paiement';
            
            if (errorMessage.includes('Clés Stripe non configurées')) {
                errorMessage += '<br><br><strong>Instructions:</strong><br>1. Créez un compte sur <a href="https://stripe.com" target="_blank">Stripe.com</a><br>2. Récupérez vos clés de test<br>3. Ajoutez-les dans le fichier .env.local';
            }
            
            showNotification(errorMessage, 'error');
        }
    })
    .catch(error => {
        console.error('Erreur complète:', error);
        paymentBtn.innerHTML = originalContent;
        paymentBtn.disabled = false;
        showNotification('Erreur réseau ou serveur. Vérifiez la console pour plus de détails.', 'error');
    });
}

function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg max-w-md transform transition-all duration-300 translate-x-full opacity-0 ${
        type === 'success' ? 'bg-green-100 border border-green-200 text-green-800' : 'bg-red-100 border border-red-200 text-red-800'
    }`;
    
    notification.innerHTML = `
        <div class="flex items-start">
            <svg class="w-5 h-5 mr-3 mt-1 flex-shrink-0 ${type === 'success' ? 'text-green-600' : 'text-red-600'}" fill="currentColor" viewBox="0 0 20 20">
                ${type === 'success' 
                    ? '<path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>'
                    : '<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>'
                }
            </svg>
            <div class="font-medium">${message}</div>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.classList.remove('translate-x-full', 'opacity-0');
    }, 100);
    
    // Délai d'affichage plus long pour les erreurs
    const displayTime = type === 'error' ? 8000 : 4000;
    
    setTimeout(() => {
        notification.classList.add('translate-x-full', 'opacity-0');
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, displayTime);
}
</script>

{% endblock %} 