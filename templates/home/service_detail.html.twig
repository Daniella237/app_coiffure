{% extends 'base.html.twig' %}

{% block title %}{{ service.name }} - Glowly{% endblock %}

{% block body %}

{% include 'components/header.html.twig' with {'user': app.user} %}

<section class="py-16 bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 min-h-screen">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Breadcrumb modernisé -->
        <nav class="flex mb-8 animate-fade-in" aria-label="Breadcrumb">
            <div class="bg-white/70 backdrop-blur-sm rounded-2xl border border-white/20 px-6 py-3 shadow-lg">
                <ol class="flex items-center space-x-2 text-sm">
                    <li>
                        <a href="{{ path('home') }}" class="flex items-center text-gray-600 hover:text-purple-600 transition-colors">
                            <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
                            </svg>
                            Accueil
                        </a>
                    </li>
                    <li class="text-gray-400">/</li>
                    <li>
                        <a href="{{ path('services') }}" class="text-gray-600 hover:text-purple-600 transition-colors">Services</a>
                    </li>
                    <li class="text-gray-400">/</li>
                    <li class="text-gray-900 font-medium">{{ service.name|slice(0, 30) }}{{ service.name|length > 30 ? '...' : '' }}</li>
                </ol>
            </div>
        </nav>

        <div class="grid grid-cols-1 xl:grid-cols-3 gap-12">
            <!-- Colonne principale (2/3) -->
            <div class="xl:col-span-2 space-y-8">
                <!-- Image et informations principales -->
                <div class="bg-white/70 backdrop-blur-lg rounded-3xl shadow-xl border border-white/20 overflow-hidden animate-slide-up">
                    <!-- Image du service -->
                    <div class="relative h-80 lg:h-96">
                        {% if service.image %}
                            <img src="{{ service.image }}" alt="{{ service.name }}" 
                                 class="w-full h-full object-cover">
                        {% else %}
                            <div class="w-full h-full bg-gradient-to-br from-purple-400 via-pink-500 to-red-500 flex items-center justify-center">
                                <svg class="w-32 h-32 text-white opacity-30" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1M12 7V5a1 1 0 011-1h1a1 1 0 011 1v2m-4 0V7a1 1 0 011-1h1a1 1 0 011 1v2"></path>
                                </svg>
                            </div>
                        {% endif %}
                        <!-- Overlay avec prix -->
                        <div class="absolute top-6 right-6">
                            <div class="bg-white/90 backdrop-blur-sm rounded-2xl px-4 py-2 shadow-lg border border-white/20">
                                <div class="text-center">
                                    <div class="text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                                        {{ service.price }}€
                                    </div>
                                    <div class="text-xs text-gray-600 font-medium">{{ service.durationMinutes }} min</div>
                                </div>
                            </div>
                        </div>
                        <!-- Badge catégorie -->
                        <div class="absolute top-6 left-6">
                            <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold bg-white/90 backdrop-blur-sm text-purple-700 shadow-lg border border-white/20">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                                </svg>
                                {{ service.category.name }}
                            </span>
                        </div>
                    </div>

                    <!-- Contenu -->
                    <div class="p-8">
                        <h1 class="text-4xl lg:text-5xl font-bold bg-gradient-to-r from-gray-900 via-purple-900 to-pink-900 bg-clip-text text-transparent mb-6">
                            {{ service.name }}
                        </h1>
                        
                        {% if service.description %}
                            <div class="prose prose-lg max-w-none text-gray-700 mb-8 leading-relaxed">
                                {{ service.description|nl2br }}
                            </div>
                        {% endif %}

                        <!-- Informations détaillées -->
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                            <div class="feature-card">
                                <div class="feature-icon bg-purple-100 text-purple-600">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                </div>
                                <div>
                                    <h3 class="font-semibold text-gray-900 mb-1">Durée</h3>
                                    <p class="text-gray-600">{{ service.durationMinutes }} minutes</p>
                                </div>
                            </div>

                            <div class="feature-card">
                                <div class="feature-icon bg-pink-100 text-pink-600">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                                    </svg>
                                </div>
                                <div>
                                    <h3 class="font-semibold text-gray-900 mb-1">Prix</h3>
                                    <p class="text-gray-600">{{ service.price }}€</p>
                                </div>
                            </div>

                            <div class="feature-card">
                                <div class="feature-icon bg-indigo-100 text-indigo-600">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                </div>
                                <div>
                                    <h3 class="font-semibold text-gray-900 mb-1">Réservation</h3>
                                    <p class="text-gray-600">Rapide et simple</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Services similaires -->
                {% if service.category.services|length > 1 %}
                    <div class="animate-fade-in-up" style="animation-delay: 0.3s;">
                        <div class="bg-white/70 backdrop-blur-lg rounded-3xl shadow-xl border border-white/20 p-8">
                            <h2 class="text-3xl font-bold text-gray-900 mb-8 flex items-center">
                                <svg class="w-8 h-8 mr-3 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                                </svg>
                                Services similaires
                            </h2>
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                {% for similarService in service.category.services|slice(0, 3) %}
                                    {% if similarService.id != service.id and similarService.isActive %}
                                        <div class="similar-service-card">
                                            {% include 'components/services/cardService.html.twig' with { service: similarService } %}
                                        </div>
                                    {% endif %}
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                {% endif %}
            </div>

            <!-- Sidebar de réservation (1/3) -->
            <div class="xl:col-span-1">
                {% if app.user %}
                    <div class="bg-white/70 backdrop-blur-lg rounded-3xl shadow-xl border border-white/20 p-8 sticky top-8 animate-slide-up" style="animation-delay: 0.2s;">
                        <div class="text-center mb-8">
                            <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full mb-4">
                                <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                            </div>
                            <h2 class="text-2xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent mb-2">
                                Réserver ce service
                            </h2>
                            <p class="text-gray-600">Choisissez votre créneau préféré</p>
                        </div>
                        
                        <form id="bookingForm" class="space-y-6">
                            <!-- Sélection de la date -->
                            <div class="modern-form-group">
                                <label class="modern-form-label">
                                    <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    Date de rendez-vous
                                </label>
                                <input type="date" id="appointmentDate" name="appointment_date" required
                                       min="{{ "now"|date('Y-m-d') }}"
                                       class="modern-form-input">
                            </div>

                            <!-- Sélection de l'heure -->
                            <div class="modern-form-group">
                                <label class="modern-form-label">
                                    <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                    Heure de rendez-vous
                                </label>
                                <select id="appointmentTime" name="appointment_time" required class="modern-form-select">
                                    <option value="">Sélectionner une heure</option>
                                    {% for hour in 8..18 %}
                                        {% for minute in [0, 30] %}
                                            {% set timeValue = hour ~ ':' ~ (minute == 0 ? '00' : '30') %}
                                            <option value="{{ timeValue }}">{{ timeValue }}</option>
                                        {% endfor %}
                                    {% endfor %}
                                </select>
                            </div>

                            <!-- Notes optionnelles -->
                            <div class="modern-form-group">
                                <label class="modern-form-label">
                                    <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                    </svg>
                                    Notes (optionnel)
                                </label>
                                <textarea id="notes" name="notes" rows="3"
                                          placeholder="Ajoutez des notes ou des demandes spéciales..."
                                          class="modern-form-textarea"></textarea>
                            </div>

                            <!-- Résumé de la réservation -->
                            <div class="booking-summary">
                                <h3 class="flex items-center font-bold text-gray-900 mb-4">
                                    <svg class="w-5 h-5 mr-2 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                                    </svg>
                                    Résumé
                                </h3>
                                <div class="space-y-3 text-sm">
                                    <div class="flex justify-between items-center">
                                        <span class="text-gray-600">Service :</span>
                                        <span class="font-medium text-gray-900">{{ service.name }}</span>
                                    </div>
                                    <div class="flex justify-between items-center">
                                        <span class="text-gray-600">Durée :</span>
                                        <span class="font-medium text-gray-900">{{ service.durationMinutes }} minutes</span>
                                    </div>
                                    <div class="border-t border-gray-200 pt-3">
                                        <div class="flex justify-between items-center">
                                            <span class="font-bold text-gray-900">Total :</span>
                                            <span class="text-2xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">{{ service.price }}€</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button type="submit" id="bookButton" class="booking-btn">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                Confirmer la réservation
                            </button>
                            

                        </form>

                        <!-- Messages -->
                        <div id="bookingMessage" class="mt-6 hidden"></div>
                    </div>
                {% else %}
                    <div class="bg-white/70 backdrop-blur-lg rounded-3xl shadow-xl border border-white/20 p-8 sticky top-8 text-center animate-slide-up" style="animation-delay: 0.2s;">
                        <div class="mb-6">
                            <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-gray-400 to-gray-500 rounded-full mb-4">
                                <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                                </svg>
                            </div>
                            <h2 class="text-2xl font-bold text-gray-900 mb-3">Connectez-vous pour réserver</h2>
                            <p class="text-gray-600 mb-8">
                                Accédez à votre compte pour réserver ce service en quelques clics.
                            </p>
                        </div>
                        <div class="space-y-4">
                            <a href="{{ path('app_login') }}?redirect={{ path('service_detail', {id: service.id}) }}" class="booking-btn w-full">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                                </svg>
                                Se connecter
                            </a>
                            <a href="{{ path('app_register') }}?redirect={{ path('service_detail', {id: service.id}) }}" class="btn-modern-secondary w-full">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
                                </svg>
                                Créer un compte
                            </a>
                        </div>
                    </div>
                {% endif %}
            </div>
        </div>
    </div>
</section>

<!-- Styles pour les animations de messages -->
<style>
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}

.animate-fade-in {
    animation: fadeIn 0.3s ease-out;
}

.message-container {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1000;
    max-width: 400px;
}

.notification-message {
    backdrop-filter: blur(10px);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}
</style>

<!-- Scripts améliorés -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    initAnimations();
    initBookingForm();
});

function initAnimations() {
    // Intersection Observer pour les animations
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
            }
        });
    }, { threshold: 0.1 });
    
    document.querySelectorAll('.similar-service-card').forEach((el) => {
        observer.observe(el);
    });
}

function initBookingForm() {
    const bookingForm = document.getElementById('bookingForm');
    const bookButton = document.getElementById('bookButton');
    const messageDiv = document.getElementById('bookingMessage');

    if (bookingForm) {
        bookingForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(bookingForm);
            const appointmentDate = formData.get('appointment_date');
            const appointmentTime = formData.get('appointment_time');
            
            
            if (!appointmentDate || !appointmentTime) {
                showMessage('Veuillez remplir tous les champs obligatoires.', 'error');
                return;
            }

            // Combiner date et heure
            const appointmentDateTime = appointmentDate + ' ' + appointmentTime + ':00';
            
            // Animation du bouton
            bookButton.disabled = true;
            bookButton.innerHTML = `
                <svg class="w-5 h-5 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                </svg>
                Réservation en cours...
            `;
            
            try {
                const response = await fetch('{{ path('service_book', {id: service.id}) }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        appointment_date: appointmentDateTime,
                        notes: formData.get('notes') || ''
                    })
                });
                
                
                if (!response.ok) {
                    console.error('Erreur HTTP:', response.status);
                }
                
                const result = await response.json();
                
                if (response.ok) {
                    showTopNotification('🎉 Réservation confirmée ! Un employé vous sera assigné prochainement.', 'success');
                    bookingForm.reset();
                } else {
                    showMessage(result.error || 'Une erreur est survenue.', 'error');
                    showTopNotification(result.error || 'Une erreur est survenue.', 'error');
                }
            } catch (error) {
                showMessage('Erreur de connexion. Veuillez réessayer.', 'error');
                showTopNotification('Erreur de connexion. Veuillez réessayer.', 'error');
            } finally {
                bookButton.disabled = false;
                bookButton.innerHTML = `
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    Confirmer la réservation
                `;
            }
        });
    } else {
        
    }
}

function showMessage(message, type) {
    const messageDiv = document.getElementById('bookingMessage');
    
    if (!messageDiv) {
        return;
    }
    
    messageDiv.className = `mt-6 p-4 rounded-2xl border notification-message ${type === 'success' 
        ? 'bg-green-50 border-green-200 text-green-800' 
        : 'bg-red-50 border-red-200 text-red-800'} animate-fade-in`;
    messageDiv.innerHTML = `
        <div class="flex items-center">
            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                ${type === 'success' 
                    ? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>'
                    : '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>'
                }
            </svg>
            <span>${message}</span>
        </div>
    `;
    messageDiv.classList.remove('hidden');
    messageDiv.style.display = 'block';
    
    setTimeout(() => {
        messageDiv.classList.add('hidden');
        messageDiv.style.display = 'none';
    }, 8000);
}

function showTopNotification(message, type) {

    // Créer le conteneur s'il n'existe pas
    let container = document.querySelector('.message-container');
    if (!container) {
        container = document.createElement('div');
        container.className = 'message-container';
        document.body.appendChild(container);
    }
    
    // Créer la notification
    const notification = document.createElement('div');
    notification.className = `notification-message p-4 mb-4 rounded-2xl border ${type === 'success' 
        ? 'bg-green-50 border-green-200 text-green-800' 
        : 'bg-red-50 border-red-200 text-red-800'} animate-fade-in`;
    
    notification.innerHTML = `
        <div class="flex items-center justify-between">
            <div class="flex items-center">
                <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    ${type === 'success' 
                        ? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>'
                        : '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>'
                    }
                </svg>
                <span class="font-medium">${message}</span>
            </div>
            <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-gray-400 hover:text-gray-600">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
    `;
    
    container.appendChild(notification);
    
    // Auto-suppression après 8 secondes
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 8000);
}

</script>

{% include 'components/footer.html.twig' with { services: services, products: products } %}

{% endblock %} 