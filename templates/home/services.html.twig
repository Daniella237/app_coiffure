{% extends 'base.html.twig' %}

{% block title %}Nos Services - Glowly{% endblock %}

{% block body %}

{% include 'components/header.html.twig' with {'user': app.user} %}

<section class="py-16 bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 min-h-screen">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- En-tête avec animation -->
        <div class="text-center mb-16 animate-fade-in">
            <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-pink-500 to-purple-600 rounded-full mb-6">
                <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1M12 7V5a1 1 0 011-1h1a1 1 0 011 1v2m-4 0V7a1 1 0 011-1h1a1 1 0 011 1v2"></path>
                </svg>
            </div>
            <h1 class="text-5xl md:text-6xl font-bold bg-gradient-to-r from-gray-900 via-purple-900 to-pink-900 bg-clip-text text-transparent mb-6">
                Nos Services
            </h1>
            <p class="text-xl text-gray-600 max-w-3xl mx-auto">
                Découvrez notre gamme complète de services de beauté et de soins capillaires personnalisés
            </p>
        </div>

        <!-- Filtres modernisés -->
        <div class="bg-white/70 backdrop-blur-lg rounded-3xl shadow-xl border border-white/20 p-8 mb-12 animate-slide-up">
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-bold text-gray-900 flex items-center">
                    <svg class="w-6 h-6 mr-3 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path>
                    </svg>
                    Filtres & Tri
                </h2>
                <button id="toggleFilters" class="lg:hidden bg-purple-100 hover:bg-purple-200 text-purple-700 px-4 py-2 rounded-full transition-colors">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                </button>
            </div>

            <form method="GET" id="filterForm" class="space-y-6">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6" id="filterGrid">
                    <!-- Filtre par catégorie -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                            </svg>
                            Catégorie
                        </label>
                        <select name="category" class="filter-select">
                            <option value="">Toutes les catégories</option>
                            {% for category in categories %}
                                <option value="{{ category.id }}" {{ filters.category == category.id ? 'selected' : '' }}>
                                    {{ category.name }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>

                    <!-- Prix -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                            </svg>
                            Prix (€)
                        </label>
                        <div class="flex space-x-2">
                            <input type="number" name="min_price" value="{{ filters.min_price }}" 
                                   placeholder="Min" min="0" step="0.01" class="filter-input flex-1">
                            <span class="flex items-center text-gray-400">-</span>
                            <input type="number" name="max_price" value="{{ filters.max_price }}" 
                                   placeholder="Max" min="0" step="0.01" class="filter-input flex-1">
                        </div>
                    </div>

                    <!-- Tri -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12"></path>
                            </svg>
                            Trier par
                        </label>
                        <div class="flex space-x-2">
                            <select name="sort" class="filter-select flex-1">
                                <option value="name" {{ filters.sort == 'name' ? 'selected' : '' }}>Nom</option>
                                <option value="price" {{ filters.sort == 'price' ? 'selected' : '' }}>Prix</option>
                                <option value="duration" {{ filters.sort == 'duration' ? 'selected' : '' }}>Durée</option>
                            </select>
                            <select name="order" class="filter-select flex-1">
                                <option value="asc" {{ filters.order == 'asc' ? 'selected' : '' }}>↑ Croissant</option>
                                <option value="desc" {{ filters.order == 'desc' ? 'selected' : '' }}>↓ Décroissant</option>
                            </select>
                        </div>
                    </div>

                    <!-- Actions -->
                    <div class="filter-group">
                        <label class="filter-label">
                            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"></path>
                            </svg>
                            Actions
                        </label>
                        <div class="flex space-x-2">
                            <button type="submit" class="btn-modern-primary flex-1">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                </svg>
                                Filtrer
                            </button>
                            <a href="{{ path('services') }}" class="btn-modern-secondary flex-1">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                </svg>
                                Reset
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <!-- Résultats avec compteur modernisé -->
        <div class="flex items-center justify-between mb-8">
            <div class="bg-white/70 backdrop-blur-sm rounded-2xl px-6 py-3 border border-white/20">
                <p class="text-gray-700 font-medium">
                    {% if services|length > 0 %}
                        <span class="text-purple-600 font-bold">{{ services|length }}</span> services trouvés
                        <span class="text-gray-400 mx-2">•</span>
                        <span class="text-sm">Page {{ currentPage }} sur {{ totalPages }}</span>
                    {% else %}
                        <span class="text-red-500">Aucun service trouvé</span>
                    {% endif %}
                </p>
            </div>
            
            <!-- Vue grid/list toggle -->
            <div class="bg-white/70 backdrop-blur-sm rounded-2xl border border-white/20 p-1 hidden lg:flex">
                <button id="gridView" class="view-toggle active">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
                    </svg>
                </button>
                <button id="listView" class="view-toggle">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Liste des services avec animations -->
        {% if services|length > 0 %}
            <div id="servicesGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 mb-12">
                {% for service in services %}
                    <div class="service-card animate-fade-in-up" style="animation-delay: {{ loop.index0 * 0.1 }}s;">
                        {% include 'components/services/cardService.html.twig' with { service: service } %}
                    </div>
                {% endfor %}
            </div>

            <!-- Pagination modernisée -->
            {% if totalPages > 1 %}
                <div class="flex justify-center items-center space-x-2 mb-8">
                    <div class="bg-white/70 backdrop-blur-sm rounded-2xl border border-white/20 p-2 flex items-center space-x-1">
                        <!-- Bouton précédent -->
                        {% if currentPage > 1 %}
                            <a href="{{ path('services', filters|merge({'page': currentPage - 1})) }}" 
                               class="pagination-btn">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                                </svg>
                            </a>
                        {% endif %}

                        <!-- Numéros de page -->
                        {% set startPage = max(1, currentPage - 2) %}
                        {% set endPage = min(totalPages, currentPage + 2) %}

                        {% if startPage > 1 %}
                            <a href="{{ path('services', filters|merge({'page': 1})) }}" class="pagination-btn">1</a>
                            {% if startPage > 2 %}
                                <span class="px-2 text-gray-400">…</span>
                            {% endif %}
                        {% endif %}

                        {% for page in startPage..endPage %}
                            {% if page == currentPage %}
                                <span class="pagination-btn-active">{{ page }}</span>
                            {% else %}
                                <a href="{{ path('services', filters|merge({'page': page})) }}" class="pagination-btn">{{ page }}</a>
                            {% endif %}
                        {% endfor %}

                        {% if endPage < totalPages %}
                            {% if endPage < totalPages - 1 %}
                                <span class="px-2 text-gray-400">…</span>
                            {% endif %}
                            <a href="{{ path('services', filters|merge({'page': totalPages})) }}" class="pagination-btn">{{ totalPages }}</a>
                        {% endif %}

                        <!-- Bouton suivant -->
                        {% if currentPage < totalPages %}
                            <a href="{{ path('services', filters|merge({'page': currentPage + 1})) }}" class="pagination-btn">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                </svg>
                            </a>
                        {% endif %}
                    </div>
                </div>
            {% endif %}
        {% else %}
            <div class="text-center py-20 animate-fade-in">
                <div class="max-w-md mx-auto">
                    <div class="w-24 h-24 bg-gradient-to-r from-gray-200 to-gray-300 rounded-full flex items-center justify-center mx-auto mb-8">
                        <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6M4 6h16v12H4z"></path>
                        </svg>
                    </div>
                    <h3 class="text-2xl font-bold text-gray-900 mb-4">Aucun service trouvé</h3>
                    <p class="text-gray-600 mb-8 leading-relaxed">
                        Aucun service ne correspond à vos critères de recherche. 
                        <br>Essayez de modifier vos filtres ou parcourez tous nos services.
                    </p>
                    <a href="{{ path('services') }}" class="btn-modern-primary inline-flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                        </svg>
                        Voir tous les services
                    </a>
                </div>
            </div>
        {% endif %}
    </div>
</section>

<!-- Scripts modernisés -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialisation des animations
    initAnimations();
    
    // Auto-submit form when filters change
    const form = document.getElementById('filterForm');
    const selects = form.querySelectorAll('select');
    const inputs = form.querySelectorAll('input[type="number"]');
    
    selects.forEach(select => {
        select.addEventListener('change', () => {
            form.submit();
        });
    });
    
    // Toggle mobile filters
    const toggleBtn = document.getElementById('toggleFilters');
    const filterGrid = document.getElementById('filterGrid');
    
    if (toggleBtn) {
        toggleBtn.addEventListener('click', () => {
            filterGrid.classList.toggle('hidden');
        });
    }
    
    // View toggle functionality
    const gridView = document.getElementById('gridView');
    const listView = document.getElementById('listView');
    const servicesGrid = document.getElementById('servicesGrid');
    
    if (gridView && listView) {
        gridView.addEventListener('click', () => {
            gridView.classList.add('active');
            listView.classList.remove('active');
            servicesGrid.className = 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 mb-12';
        });
        
        listView.addEventListener('click', () => {
            listView.classList.add('active');
            gridView.classList.remove('active');
            servicesGrid.className = 'grid grid-cols-1 gap-6 mb-12';
        });
    }
});

function initAnimations() {
    // Intersection Observer pour les animations
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
            }
        });
    }, { threshold: 0.1 });
    
    // Observer tous les éléments avec animation
    document.querySelectorAll('.service-card').forEach((el) => {
        observer.observe(el);
    });
}
</script>

{% include 'components/footer.html.twig' with { services: services, products: products } %}

{% endblock %} 